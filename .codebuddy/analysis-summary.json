{"title":"统一项目异常报错处理","features":["创建自定义业务异常类 BusinessException","实现全局异常过滤器 HttpExceptionFilter","使用 error-codes.ts 集中管理所有业务错误","重构项目中不规范的异常抛出逻辑","补充产品相关错误码"],"tech":{"Web":{"arch":"nestjs","component":null}},"design":"通过创建 BusinessException 自定义异常类和 HttpExceptionFilter 全局过滤器，实现了统一的异常处理机制。所有业务异常都通过 ERROR_CODES 进行管理，确保错误信息的一致性和可维护性。","plan":{"创建继承自 HttpException 的自定义业务异常类 BusinessException":"done","实现一个全局异常过滤器，用于捕获并格式化 BusinessException 和其他系统级异常":"done","在 main.ts 中全局注册该异常过滤器":"done","全面排查并重构项目中的 'throw new Error()' 和 'throw new HttpException()' 等不规范用法，替换为抛出 BusinessException":"done","补充和完善 error-codes.ts 文件中的产品相关错误码":"done"}}